{"version":3,"sources":["components/layout/SignInLink.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/post/SummaryPost.js","components/post/ListPost.js","components/layout/SideBar.js","components/page/Home.js","components/post/DetailPost.js","components/post/CreatePost.js","App.js","serviceWorker.js","index.js"],"names":["SignInLink","react_default","a","createElement","className","react_router_dom","to","SignOutLink","Navbar","layout_SignInLink","layout_SignOutLink","SummaryPost","ListPost","post_SummaryPost","SideBar","Home","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","post_ListPost","layout_SideBar","Component","DetailPost","props","project","CreatePost","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","title","content","changeHandle","e","setState","defineProperty","target","id","submitHandle","preventDefault","console","log","onSubmit","htmlFor","type","onChange","App","basename","layout_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93e3cd49.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignInLink = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/blog/post/create'>New Project</NavLink></li>\r\n            <li><NavLink to='/blog/logout'>Log Out</NavLink></li>\r\n            <li><NavLink to='/blog/user' className=\"btn btn-floating pink\">IKP</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignInLink;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignOutLink = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/blog/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/blog/signin'>Sign In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLink;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignInLink from './SignInLink'\r\nimport SignOutLink from './SignOutLink'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/blog/\" className=\"brand-logo\">Blog IKP</Link>\r\n                <SignInLink />\r\n                <SignOutLink />\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SummaryPost() {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey grey-text darken-3\">\r\n                <Link to={'/post/3'}>\r\n                    <span className=\"card-title\">{'post.title'}</span>\r\n                </Link>\r\n                <p>Post By {'post.authorName'}</p>\r\n                <p className=\"grey-text\">28th June 2019</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SummaryPost\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SummaryPost from './SummaryPost'\r\n\r\nfunction ListPost() {\r\n    return (\r\n        <div className=\"post-list section\">\r\n            <Link to={'/post/3'}>\r\n                <SummaryPost />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPost\r\n","import React from 'react';\r\n\r\nconst SideBar = () => {\r\n    return(\r\n        <div>\r\n            <p>Sidebar</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react'\r\nimport ListPost from '../post/ListPost'\r\nimport SideBar from '../layout/SideBar'\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ListPost />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <SideBar />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nfunction DetailPost(props) {\r\n    const {project} = props;\r\n    if(!project) {\r\n        return(\r\n            <div className=\"container section project-detail\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content grey darken-3\">\r\n                        <span className=\"card-title\">{'project.title'}</span>\r\n                        <p>{'project.content'}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey darken-3 grey-text text-darken-1\">\r\n                        <div>Posted By {'project.authorName'}</div>\r\n                        <div>28th June 2019</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">Project Loading...</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailPost\r\n","import React, { Component } from 'react'\r\n\r\nexport class CreatePost extends Component {\r\n    state = {\r\n        title:null,\r\n        content:null\r\n    }\r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value,\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Create Post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"emtitleail\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.changeHandle} ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreatePost\r\n","import React from 'react'\r\nimport Navbar from './components/layout/Navbar'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Home from './components/page/Home'\r\nimport DetailPost from './components/post/DetailPost';\r\nimport CreatePost from './components/post/CreatePost';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename='/blog'>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/post/create\" component={CreatePost} />\r\n          <Route path=\"/post/:id\" component={DetailPost} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}