{"version":3,"sources":["components/layout/SignInLink.js","store/actions/authAction.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/post/SummaryPost.js","components/post/ListPost.js","components/layout/SideBar.js","components/page/Home.js","store/actions/postAction.js","components/auth/SignIn.js","components/post/DetailPost.js","components/post/CreatePost.js","components/post/EditPost.js","App.js","serviceWorker.js","store/reducers/postReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","logout","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","SignOutLink","Navbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkAuth","sessionStorage","getItem","authLink","user","layout_SignInLink","layout_SignOutLink","React","Component","state","auth","token","SummaryPost","_ref","post","id","title","ListPost","posts","map","post_SummaryPost","key","SideBar","Home","_Component","apply","arguments","inherits","createClass","value","getPost","listPost","length","post_ListPost","layout_SideBar","axios","get","then","res","data","SignIn","_getPrototypeOf2","_len","args","Array","_key","concat","email","password","changeHandle","e","setState","defineProperty","target","submitHandle","preventDefault","login","react_router","alertError","authError","onSubmit","htmlFor","onChange","catch","err","DetailPost","clickHandle","deletePost","match","params","history","push","editLink","deleteLink","href","content","ownProps","find","console","log","message","CreatePost","createPost","method","url","EditPost","indexOf","editPost","index","App","layout_Navbar","exact","path","component","Boolean","window","location","hostname","initState","postReducer","undefined","action","Math","random","createPosts","toConsumableArray","objectSpread","deletePosts","filter","authReducer","setItem","removeItem","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0346632b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../store/actions/authAction';\r\n\r\nconst SignInLink = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/blog/post/create'>New Post</NavLink></li>\r\n            <li><a onClick={props.logout}>Log Out</a></li>\r\n            <li><NavLink to='/blog/user' className=\"btn btn-floating pink\">IKP</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {dispatch(logout())}\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignInLink);","import axios from 'axios'\r\n\r\nexport function login(user) {\r\n    return(dispatch) => {\r\n        const url = \"https://reqres.in/api/login\"\r\n        axios.post(url,user)\r\n            .then(res => {\r\n                dispatch({type:\"LOGIN_SUCCESS\",user:res.data})\r\n            }).catch(err => {\r\n                dispatch({type:\"LOGIN_FAILED\",err})\r\n            })\r\n    }\r\n}\r\n\r\nexport function checkAuth(token) {\r\n    return {\r\n        type: \"CHECK_AUTH\",\r\n        token\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: \"LOGOUT_SUCCESS\",\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignOutLink = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/blog/signin'>Sign In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLink;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignInLink from './SignInLink'\r\nimport SignOutLink from './SignOutLink'\r\nimport {connect} from 'react-redux'\r\nimport {checkAuth} from '../../store/actions/authAction'\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        props.checkAuth(sessionStorage.getItem(\"user_token\"))\r\n    }    \r\n\r\n    render() {\r\n        const authLink = (this.props.user) ? (\r\n            <SignInLink />\r\n        ) : (\r\n            <SignOutLink />\r\n        )\r\n\r\n        return (\r\n            <nav className=\"nav-wrapper grey darken-3\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/blog/\" className=\"brand-logo\">Blog IKP</Link>\r\n                    {authLink}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user : state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        checkAuth : (token) => dispatch(checkAuth(token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Navbar)\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SummaryPost({post}) {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey grey-text darken-3\">\r\n                <Link to={'/blog/post/'+post.id}>\r\n                    <span className=\"card-title\">{post.title}</span>\r\n                </Link>\r\n                <p>Post By Me | <Link to={\"/blog/post/\"+post.id+\"/edit\"} >EDIT</Link></p>\r\n                <p className=\"grey-text\">28th June 2019</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SummaryPost\r\n","import React from 'react'\r\nimport SummaryPost from './SummaryPost'\r\n\r\nfunction ListPost({posts}) {\r\n    return (\r\n        <div className=\"post-list section\">\r\n            {\r\n                posts && posts.map(post => {\r\n                    return (\r\n                        <SummaryPost post={post} key={post.id}/>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPost\r\n","import React from 'react';\r\n\r\nconst SideBar = () => {\r\n    return(\r\n        <div>\r\n            <p>Follow Me</p>\r\n            <div className=\"card grey darken-3\">\r\n                <div className=\"card-content\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react'\r\nimport ListPost from '../post/ListPost'\r\nimport SideBar from '../layout/SideBar'\r\nimport {connect} from 'react-redux'\r\nimport { getPost } from '../../store/actions/postAction';\r\n\r\nexport class Home extends Component {\r\n    componentDidMount() {\r\n        this.props.getPost()\r\n    }\r\n    \r\n    render() {\r\n        let listPost = (this.props.posts.length) ? (\r\n            <ListPost posts={this.props.posts}/>            \r\n        ) : (\r\n            <div className=\"center\"><br />Loading Post...</div>\r\n        )\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        {listPost}\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <SideBar />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.post.posts,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getPost: () => {dispatch(getPost())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)\r\n","import axios from 'axios'\r\n\r\nexport function getPost() {\r\n    return (dispatch) => {\r\n        axios.get(\"https://apiblogikp.000webhostapp.com/api/post/read.php\")\r\n            .then((res) => {\r\n                dispatch(setPost(res.data.posts))\r\n            })\r\n    }\r\n}\r\n\r\nexport function setPost(posts) {\r\n    return {\r\n        type: \"SET_POST\",\r\n        posts\r\n    }\r\n}\r\n\r\nexport function createPost(post) {\r\n    return (dispatch) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url:\"https://apiblogikp.000webhostapp.com/api/post/create.php\",\r\n            data: post\r\n        })\r\n        .then(res => {\r\n            console.log(res.data.message)\r\n            dispatch({type: \"CREATE_POST\", post})\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\nexport function editPost(post,id) {\r\n    return (dispatch) => {\r\n        axios.post(\"https://apiblogikp.000webhostapp.com/api/post/edit.php?id=\"+id,post)\r\n            .then(res => {\r\n                dispatch({type:\"EDIT_POST\",post})\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function deletePost(id) {\r\n    return (dispatch) => {\r\n        axios.get(\"https://apiblogikp.000webhostapp.com/api/post/delete.php?id=\"+id)\r\n            .then(res => {\r\n                console.log(res.data.message)\r\n                dispatch({type:'DELETE_POST',id})\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../store/actions/authAction'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email:'',\r\n        password:''\r\n    }\r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault();\r\n        this.props.login(this.state)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.user) {\r\n            return <Redirect to=\"/blog/\" />\r\n        }\r\n\r\n        const alertError = this.props.authError ? (\r\n            <span className=\"alert alert-danger\">\r\n                <center>{this.props.authError}</center>\r\n            </span>\r\n        ) : (\r\n            null\r\n        )\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\r\n                    </div>\r\n                    {alertError}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login : (user) => {dispatch(login(user))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {deletePost} from '../../store/actions/postAction'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass DetailPost extends React.Component {\r\n    clickHandle = (e) => {\r\n        e.preventDefault()\r\n        if (!this.props.user) {\r\n            this.props.history.push(\"/blog/signin\")\r\n        } else {\r\n            this.props.deletePost(this.props.match.params.id)\r\n            this.props.history.push(\"/blog/signin\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {post} = this.props;\r\n\r\n        if(post) {\r\n                const editLink = (this.props.user) ? (<Link to={\"/blog/post/\"+post.id+\"/edit\"}>EDIT</Link>) : null\r\n                const deleteLink =  (this.props.user) ? (<a href=\"#\" onClick={this.clickHandle}>Delete</a>) : null\r\n            return(\r\n                <div className=\"container section project-detail\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content grey darken-3\">\r\n                            <span className=\"card-title\">{post.title}</span>\r\n                            <p>{post.content}</p>\r\n                            | {editLink}\r\n                        </div>\r\n                        <div className=\"card-action grey darken-3 grey-text text-darken-1\">\r\n                            <div>Posted By Me | {deleteLink}</div>\r\n                            <div>28th June 2019</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container center\">Project Loading...</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    let id = ownProps.match.params.id\r\n    let post = state.post.posts.find((post) => {\r\n        return post.id == id\r\n    })\r\n    return{\r\n        post:post,\r\n        user:state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deletePost: (id) => dispatch(deletePost(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPost)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createPost} from '../../store/actions/postAction'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class CreatePost extends Component {\r\n    state = {\r\n        title:null,\r\n        content:null\r\n    }\r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value,\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault()\r\n        this.props.createPost(this.state)\r\n        this.props.history.push(\"/blog\")\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.user) {\r\n            return <Redirect to=\"/blog/signin\"/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Create Post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"emtitleail\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.changeHandle} ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts:state.post.posts,\r\n        user:state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => {dispatch(createPost(post))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {editPost} from '../../store/actions/postAction'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class EditPost extends Component {\r\n    state = {\r\n        id:'',\r\n        title:'',\r\n        content:''\r\n    }    \r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            title:this.props.post.title,\r\n            content:this.props.post.content\r\n        })\r\n    }\r\n    \r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value,\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault()\r\n        const index = this.props.posts.indexOf(this.props.post)\r\n        this.props.editPost(this.state,this.props.match.params.id)\r\n        this.props.history.push(\"/blog\")\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.user) {\r\n            return <Redirect to=\"/blog/signin\"/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Edit Post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"emtitleail\">Title</label>\r\n                        <input type=\"text\" id=\"title\" value={this.state.title} onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\" value={this.state.content} id=\"content\" onChange={this.changeHandle} ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const posts = state.post.posts\r\n    const post = state.post.posts.find(post => {\r\n        return post.id == ownProps.match.params.id\r\n    })\r\n    return {\r\n        post:post,\r\n        posts:posts,\r\n        user:state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editPost: (post,index) => {dispatch(editPost(post,index))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost)\r\n","import React from 'react'\r\nimport Navbar from './components/layout/Navbar'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Home from './components/page/Home'\r\nimport SignIn from './components/auth/SignIn'\r\nimport DetailPost from './components/post/DetailPost';\r\nimport CreatePost from './components/post/CreatePost';\r\nimport EditPost from './components/post/EditPost';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/blog/\" component={Home} />\r\n          <Route path=\"/blog/signin\" component={SignIn} />\r\n          <Route path=\"/blog/post/create\" component={CreatePost} />\r\n          <Route path=\"/blog/post/:id/edit\" component={EditPost} />\r\n          <Route path=\"/blog/post/:id\" component={DetailPost} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    posts:[]\r\n}\r\n\r\nconst postReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"CREATE_POST\":\r\n            action.post.id = Math.random() \r\n            let createPosts = [...state.posts, action.post]\r\n            return {\r\n                ...state,\r\n                posts:createPosts\r\n            }\r\n\r\n        case \"SET_POST\":\r\n            return {\r\n                ...state,\r\n                posts:action.posts\r\n            }\r\n\r\n        case \"EDIT_POST\":\r\n            console.log('Edited : ',action.post.id)\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case \"DELETE_POST\":\r\n            console.log('Deleted : ',action.id)\r\n            let deletePosts = state.posts.filter((post) => {\r\n                return post.id != action.id\r\n            })\r\n            return {\r\n                ...state,\r\n                posts:deletePosts\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer;","const initState = {\r\n    authError:false,\r\n    user:null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log(\"Logged In : \",action.user)\r\n            sessionStorage.setItem(\"user_token\",action.user.token)\r\n            return {\r\n                ...state,\r\n                authError:false,\r\n                user:action.user.token\r\n            }\r\n        case \"LOGIN_FAILED\":\r\n            console.log(\"Login Failed \",action.err)\r\n            return {\r\n                ...state,\r\n                authError: \"Login Failed\" \r\n            }\r\n        case \"LOGOUT_SUCCESS\":\r\n            console.log(\"Logout Success\")\r\n            sessionStorage.removeItem(\"user_token\")\r\n            return {\r\n                ...state,\r\n                user:null   \r\n            }\r\n        case \"CHECK_AUTH\" :\r\n            return {\r\n                ...state,\r\n                user:action.token\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","import postReducer from './postReducer';\r\nimport authReducer from './authReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    post:postReducer,\r\n    auth:authReducer,\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer';\n\nconst store = createStore(rootReducer,\n    applyMiddleware(thunk)\n)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}