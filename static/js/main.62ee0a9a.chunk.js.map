{"version":3,"sources":["components/layout/SignInLink.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/post/SummaryPost.js","components/post/ListPost.js","components/layout/SideBar.js","components/page/Home.js","store/actions/postAction.js","components/auth/SignIn.js","components/post/DetailPost.js","components/post/CreatePost.js","components/post/EditPost.js","App.js","serviceWorker.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","index.js"],"names":["SignInLink","react_default","a","createElement","className","react_router_dom","to","SignOutLink","Navbar","layout_SignInLink","layout_SignOutLink","SummaryPost","_ref","post","id","title","ListPost","posts","map","post_SummaryPost","key","SideBar","Home","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","post_ListPost","props","layout_SideBar","Component","connect","state","dispatch","getPost","axios","get","then","res","type","data","slice","SignIn","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","email","password","changeHandle","e","setState","defineProperty","target","submitHandle","preventDefault","console","log","onSubmit","htmlFor","onChange","DetailPost","clickHandle","deletePost","match","params","history","push","content","href","onClick","React","ownProps","find","CreatePost","createPost","EditPost","index","indexOf","editPost","App","layout_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","initState","postReducer","undefined","action","Math","random","createPosts","toConsumableArray","objectSpread","deletePosts","filter","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62ee0a9a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignInLink = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/blog/post/create'>New Post</NavLink></li>\r\n            <li><NavLink to='/blog/logout'>Log Out</NavLink></li>\r\n            <li><NavLink to='/blog/user' className=\"btn btn-floating pink\">IKP</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignInLink;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignOutLink = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/blog/signin'>Sign In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLink;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignInLink from './SignInLink'\r\nimport SignOutLink from './SignOutLink'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/blog/\" className=\"brand-logo\">Blog IKP</Link>\r\n                <SignInLink />\r\n                <SignOutLink />\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SummaryPost({post}) {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey grey-text darken-3\">\r\n                <Link to={'/blog/post/'+post.id}>\r\n                    <span className=\"card-title\">{post.title}</span>\r\n                </Link>\r\n                <p>Post By Me</p>\r\n                <p className=\"grey-text\">28th June 2019</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SummaryPost\r\n","import React from 'react'\r\nimport SummaryPost from './SummaryPost'\r\n\r\nfunction ListPost({posts}) {\r\n    return (\r\n        <div className=\"post-list section\">\r\n            {\r\n                posts && posts.map(post => {\r\n                    return (\r\n                        <SummaryPost post={post} key={post.id}/>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPost\r\n","import React from 'react';\r\n\r\nconst SideBar = () => {\r\n    return(\r\n        <div>\r\n            <p>Sidebar</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react'\r\nimport ListPost from '../post/ListPost'\r\nimport SideBar from '../layout/SideBar'\r\nimport {connect} from 'react-redux'\r\nimport { getPost } from '../../store/actions/postAction';\r\n\r\nexport class Home extends Component {\r\n    // componentDidMount() {\r\n    //     this.props.getPost();\r\n    // }\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ListPost posts={this.props.posts}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <SideBar />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.post.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getPost: () => {dispatch(getPost())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)\r\n","import axios from 'axios'\r\n\r\nexport function getPost() {\r\n    return (dispatch) => {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\")\r\n            .then((res) => {\r\n                dispatch(setPost(res.data.slice(0,5)))\r\n            })\r\n    }\r\n}\r\n\r\nexport function setPost(posts) {\r\n    return {\r\n        type: \"SET_POST\",\r\n        posts\r\n    }\r\n}\r\n\r\nexport function createPost(post) {\r\n    return {\r\n        type: \"CREATE_POST\",\r\n        post\r\n    }\r\n}\r\n\r\nexport function editPost(post,index) {\r\n    return {\r\n        type: \"EDIT_POST\",\r\n        post,\r\n        index\r\n    }\r\n}\r\n\r\nexport function deletePost(id) {\r\n    return {\r\n        type: \"DELETE_POST\",\r\n        id\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email:'',\r\n        password:''\r\n    }\r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {deletePost} from '../../store/actions/postAction'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass DetailPost extends React.Component {\r\n    clickHandle = (e) => {\r\n        e.preventDefault()\r\n        this.props.deletePost(this.props.match.params.id)\r\n        this.props.history.push(\"/blog/\")\r\n    }\r\n\r\n    render() {\r\n        const {post} = this.props;\r\n        if(post) {\r\n            return(\r\n                <div className=\"container section project-detail\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content grey darken-3\">\r\n                            <span className=\"card-title\">{post.title}</span>\r\n                            <p>{post.content}</p>\r\n                            | <Link to={\"/blog/post/\"+post.id+\"/edit\"}>Sunting</Link>\r\n                        </div>\r\n                        <div className=\"card-action grey darken-3 grey-text text-darken-1\">\r\n                            <div>Posted By Me | <a href=\"#\" onClick={this.clickHandle}>Delete</a></div>\r\n                            <div>28th June 2019</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container center\">Project Loading...</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    let id = ownProps.match.params.id\r\n    let post = state.post.posts.find((post) => {\r\n        return post.id == id\r\n    })\r\n    return{\r\n        post:post\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deletePost: (id) => dispatch(deletePost(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPost)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createPost} from '../../store/actions/postAction'\r\n\r\nexport class CreatePost extends Component {\r\n    state = {\r\n        title:null,\r\n        content:null\r\n    }\r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value,\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault()\r\n        this.props.createPost(this.state)\r\n        this.props.history.push(\"/blog\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Create Post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"emtitleail\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.changeHandle} ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts:state.post.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => {dispatch(createPost(post))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {editPost} from '../../store/actions/postAction'\r\n\r\nexport class EditPost extends Component {\r\n    state = {\r\n        id:'',\r\n        title:'',\r\n        content:''\r\n    }    \r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            id:this.props.match.params.id,\r\n            title:this.props.post.title,\r\n            content:this.props.post.content\r\n        })\r\n    }\r\n    \r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value,\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault()\r\n        const index = this.props.posts.indexOf(this.props.post)\r\n        this.props.editPost(this.state,index)\r\n        this.props.history.push(\"/blog\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Edit Post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"emtitleail\">Title</label>\r\n                        <input type=\"text\" id=\"title\" value={this.state.title} onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\" value={this.state.content} id=\"content\" onChange={this.changeHandle} ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const posts = state.post.posts\r\n    const post = state.post.posts.find(post => {\r\n        return post.id == ownProps.match.params.id\r\n    })\r\n    return {\r\n        post:post,\r\n        posts:posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editPost: (post,index) => {dispatch(editPost(post,index))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost)\r\n","import React from 'react'\r\nimport Navbar from './components/layout/Navbar'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Home from './components/page/Home'\r\nimport SignIn from './components/auth/SignIn'\r\nimport DetailPost from './components/post/DetailPost';\r\nimport CreatePost from './components/post/CreatePost';\r\nimport EditPost from './components/post/EditPost';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/blog/\" component={Home} />\r\n          <Route path=\"/blog/signin\" component={SignIn} />\r\n          <Route path=\"/blog/post/create\" component={CreatePost} />\r\n          <Route path=\"/blog/post/:id/edit\" component={EditPost} />\r\n          <Route path=\"/blog/post/:id\" component={DetailPost} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    posts:[\r\n        {id:1, title:'Find Some Ex', content:'this is a Content of Find Some Ex Post'},\r\n        {id:2, title:'Find Some Golf', content:'this is a Content of Find Some Ex Golf'},\r\n        {id:3, title:'Find Some Wolf', content:'this is a Content of Find Some Ex Wolf'},\r\n    ]\r\n}\r\n\r\nconst postReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"CREATE_POST\":\r\n            action.post.id = Math.random() \r\n            let createPosts = [...state.posts, action.post]\r\n            return {\r\n                ...state,\r\n                posts:createPosts\r\n            }\r\n\r\n        case \"SET_POST\":\r\n            return {\r\n                ...state,\r\n                posts:action.posts\r\n            }\r\n\r\n        case \"EDIT_POST\":\r\n            console.log('Edited : ',action.post.id)\r\n            let index = action.index\r\n            state.posts[index] = action.post\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case \"DELETE_POST\":\r\n            console.log('Deleted : ',action.id)\r\n            let deletePosts = state.posts.filter((post) => {\r\n                return post.id != action.id\r\n            })\r\n            return {\r\n                ...state,\r\n                posts:deletePosts\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer;","import postReducer from './postReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    post:postReducer,\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer';\n\nconst store = createStore(rootReducer,\n    applyMiddleware(thunk)\n)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}