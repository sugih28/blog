{"version":3,"sources":["components/layout/SignInLink.js","store/actions/authAction.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/post/SummaryPost.js","components/post/ListPost.js","components/layout/SideBar.js","config/firebase.js","store/actions/postAction.js","components/page/Home.js","components/auth/SignIn.js","components/post/DetailPost.js","components/post/CreatePost.js","components/post/EditPost.js","App.js","serviceWorker.js","store/reducers/postReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","logout","firebase","signOut","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","SignOutLink","Navbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkAuth","sessionStorage","getItem","authLink","auth","uid","layout_SignInLink","layout_SignOutLink","React","Component","state","console","log","token","SummaryPost","_ref","post","id","title","date","ListPost","posts","map","post_SummaryPost","key","SideBar","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","postRef","ref","child","getPost","on","snap","val","newState","push","content","setPost","Home","_Component","apply","arguments","inherits","createClass","value","listPost","length","post_ListPost","layout_SideBar","user","SignIn","_getPrototypeOf2","_len","args","Array","_key","concat","email","password","changeHandle","e","setState","defineProperty","target","submitHandle","preventDefault","login","react_router","alertError","authError","onSubmit","htmlFor","onChange","credential","signInWithEmailAndPassword","res","catch","err","DetailPost","clickHandle","deletePost","match","params","history","editLink","deleteLink","href","ownProps","find","remove","CreatePost","createPost","d","Date","getDate","getMonth","getFullYear","EditPost","indexOf","editPost","index","update","App","layout_Navbar","exact","path","component","Boolean","window","location","hostname","initState","postReducer","undefined","action","objectSpread","deletePosts","filter","authReducer","rootReducer","combineReducers","firebaseReducer","store","compose","reactReduxFirebase","userProfile","enableLogging","createStore","createStoreWithFirebase","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d33a771e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../store/actions/authAction';\r\n\r\nconst SignInLink = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/blog/post/create'>New Post</NavLink></li>\r\n            <li><a onClick={props.logout}>Log Out</a></li>\r\n            <li><NavLink to='/blog/user' className=\"btn btn-floating pink\">IKP</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {dispatch(logout())}\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignInLink);","import axios from 'axios'\r\nimport * as firebase from 'firebase'\r\n\r\nexport function login(credential) {\r\n    return(dispatch) => {\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credential.email,\r\n            credential.password,\r\n        ).then(res => {\r\n            console.log(res.user)\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type:\"LOGIN_FAILED\",err})\r\n        })\r\n\r\n\r\n        // const url = \"https://reqres.in/api/login\"\r\n        // axios.post(url,user)\r\n        //     .then(res => {\r\n        //         console.log(user)\r\n        //         dispatch({type:\"LOGIN_SUCCESS\",user:res.data})\r\n        //     }).catch(err => {\r\n        //         dispatch({type:\"LOGIN_FAILED\",err})\r\n        //     })\r\n    }\r\n}\r\n\r\nexport function checkAuth(token) {\r\n    return {\r\n        type: \"CHECK_AUTH\",\r\n        token\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return (dispatch) => {\r\n        firebase.auth().signOut()\r\n            .then(() => {\r\n                dispatch({type: 'LOGOUT_SUCCESS'})\r\n            })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignOutLink = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/blog/signin'>Sign In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLink;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignInLink from './SignInLink'\r\nimport SignOutLink from './SignOutLink'\r\nimport {connect} from 'react-redux'\r\nimport {checkAuth} from '../../store/actions/authAction'\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        props.checkAuth(sessionStorage.getItem(\"user_token\"))\r\n    }    \r\n\r\n    render() {\r\n        const authLink = (this.props.auth.uid) ? (\r\n            <SignInLink />\r\n        ) : (\r\n            <SignOutLink />\r\n        )\r\n\r\n        return (\r\n            <nav className=\"nav-wrapper grey darken-3\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/blog/\" className=\"brand-logo\">Blog IKP</Link>\r\n                    {authLink}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth : state.firebase.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        checkAuth : (token) => dispatch(checkAuth(token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Navbar)\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SummaryPost({post}) {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey grey-text darken-3\">\r\n                <Link to={'/blog/post/'+post.id}>\r\n                    <span className=\"card-title\">{post.title}</span>\r\n                </Link>\r\n                <p>Post By Me</p>\r\n                <p className=\"grey-text\">{post.date}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SummaryPost\r\n","import React from 'react'\r\nimport SummaryPost from './SummaryPost'\r\n\r\nfunction ListPost({posts}) {\r\n    return (\r\n        <div className=\"post-list section\">\r\n            {\r\n                posts && posts.map(post => {\r\n                    return (\r\n                        <SummaryPost post={post} key={post.id}/>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPost\r\n","import React from 'react';\r\n\r\nconst SideBar = () => {\r\n    return(\r\n        <div>\r\n            <p>Follow Me</p>\r\n            <div className=\"card grey darken-3\">\r\n                <div className=\"card-content\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import * as firebase from 'firebase'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCBe9-Lg9HMpwaraDyMLZVKgHWH3UqJc_Y\",\r\n    authDomain: \"ikp-blog.firebaseapp.com\",\r\n    databaseURL: \"https://ikp-blog.firebaseio.com\",\r\n    projectId: \"ikp-blog\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"5441272857\",\r\n    appId: \"1:5441272857:web:68ee4e89dd3b6993\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const dbRef = firebase.database().ref()","import {dbRef} from '../../config/firebase'\r\n\r\nconst postRef = dbRef.child('posts')\r\n\r\nexport function getPost() {\r\n    return (dispatch) => {\r\n        postRef.on('value', snap => {\r\n            let posts = snap.val()\r\n            let newState = []\r\n\r\n            for (let post in posts) {\r\n                newState.push({\r\n                    id:post,\r\n                    title: posts[post].title,\r\n                    content: posts[post].content,\r\n                    date: posts[post].date\r\n                })\r\n            }\r\n            dispatch(setPost(newState))\r\n        })\r\n    }\r\n}\r\n\r\nexport function setPost(posts) {\r\n    return {\r\n        type: \"SET_POST\",\r\n        posts\r\n    }\r\n}\r\n\r\nexport function createPost(post) {\r\n    return (dispatch) => {\r\n        postRef.push(post)\r\n            .then(res => {\r\n                dispatch({type: 'CREATE_POST',post})\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function editPost(post,id) {\r\n    return (dispatch) => {\r\n        postRef.child(id).update(post)\r\n            .then(res => {\r\n                dispatch({type: 'EDIT_POST',post,id})\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function deletePost(id) {\r\n    return (dispatch) => {\r\n        postRef.child(id).remove()\r\n            .then(res => {\r\n                dispatch({type: 'DELETE_POST',id})\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ListPost from '../post/ListPost'\r\nimport SideBar from '../layout/SideBar'\r\nimport {connect} from 'react-redux'\r\nimport { getPost } from '../../store/actions/postAction';\r\n\r\nexport class Home extends Component {\r\n    componentDidMount() {\r\n        this.props.getPost()\r\n    }\r\n    \r\n    render() {\r\n        let listPost = (this.props.posts.length) ? (\r\n            <ListPost posts={this.props.posts}/>            \r\n        ) : (\r\n            <div className=\"center\"><br />Loading Post...</div>\r\n        )\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        {listPost}\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <SideBar />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.post.posts,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getPost: () => {dispatch(getPost())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../store/actions/authAction'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email:'',\r\n        password:''\r\n    }\r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault();\r\n        this.props.login(this.state)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.auth.uid) {\r\n            return <Redirect to=\"/blog/\" />\r\n        }\r\n\r\n        const alertError = this.props.authError ? (\r\n            <span className=\"alert alert-danger\">\r\n                <center>{this.props.authError}</center>\r\n            </span>\r\n        ) : (\r\n            null\r\n        )\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\r\n                    </div>\r\n                    {alertError}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login : (user) => {dispatch(login(user))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {deletePost, getPost} from '../../store/actions/postAction'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass DetailPost extends React.Component {\r\n    clickHandle = (e) => {\r\n        e.preventDefault()\r\n        if (!this.props.auth.uid) {\r\n            this.props.history.push(\"/blog/signin\")\r\n        } else {\r\n            this.props.deletePost(this.props.match.params.id)\r\n            this.props.history.push(\"/blog/signin\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {post} = this.props;\r\n        if(post) {\r\n                const editLink = (this.props.auth.uid) ? (<Link to={\"/blog/post/\"+post.id+\"/edit\"}>EDIT</Link>) : null\r\n                const deleteLink =  (this.props.auth.uid) ? (<a href=\"#\" onClick={this.clickHandle}>Delete</a>) : null\r\n            return(\r\n                <div className=\"container section project-detail\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content grey darken-3\">\r\n                            <span className=\"card-title\">{post.title}</span>\r\n                            <p>{post.content}</p>\r\n                            | {editLink}\r\n                        </div>\r\n                        <div className=\"card-action grey darken-3 grey-text text-darken-1\">\r\n                            <div>Posted By Me | {deleteLink}</div>\r\n                            <div>{post.date}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            this.props.getPost()\r\n            \r\n            return (\r\n                <div className=\"container center\">Post Loading...</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    let id = ownProps.match.params.id\r\n    let post = state.post.posts.find((post) => {\r\n        return post.id == id\r\n    })\r\n    return{\r\n        post:post,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deletePost: (id) => dispatch(deletePost(id)),\r\n        getPost: () => dispatch(getPost())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPost)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createPost} from '../../store/actions/postAction'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class CreatePost extends Component {\r\n    state = {\r\n        title:'',\r\n        content:'',\r\n        date: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        let d = new Date()\r\n        const month = ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Des']\r\n        const date = d.getDate() +' '+ month[d.getMonth()] + ' ' + d.getFullYear()\r\n\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n    \r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value,\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault()\r\n        this.props.createPost(this.state)\r\n        this.props.history.push(\"/blog\")\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.auth.uid) {\r\n            return <Redirect to=\"/blog/signin\"/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Create Post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"emtitleail\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.changeHandle} ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts:state.post.posts,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => {dispatch(createPost(post))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {editPost} from '../../store/actions/postAction'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class EditPost extends Component {\r\n    state = {\r\n        title:'',\r\n        content:''\r\n    }    \r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            title:this.props.post.title,\r\n            content:this.props.post.content\r\n        })\r\n    }\r\n    \r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value,\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault()\r\n        const index = this.props.posts.indexOf(this.props.post)\r\n        this.props.editPost(this.state,this.props.match.params.id)\r\n        this.props.history.push(\"/blog\")\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.auth.uid) {\r\n            return <Redirect to=\"/blog/signin\"/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Edit Post</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"emtitleail\">Title</label>\r\n                        <input type=\"text\" id=\"title\" value={this.state.title} onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\" value={this.state.content} id=\"content\" onChange={this.changeHandle} ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const posts = state.post.posts\r\n    const post = state.post.posts.find(post => {\r\n        return post.id == ownProps.match.params.id\r\n    })\r\n    return {\r\n        post:post,\r\n        posts:posts,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editPost: (post,index) => {dispatch(editPost(post,index))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost)\r\n","import React from 'react'\r\nimport Navbar from './components/layout/Navbar'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Home from './components/page/Home'\r\nimport SignIn from './components/auth/SignIn'\r\nimport DetailPost from './components/post/DetailPost';\r\nimport CreatePost from './components/post/CreatePost';\r\nimport EditPost from './components/post/EditPost';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/blog/\" component={Home} />\r\n          <Route path=\"/blog/signin\" component={SignIn} />\r\n          <Route path=\"/blog/post/create\" component={CreatePost} />\r\n          <Route path=\"/blog/post/:id/edit\" component={EditPost} />\r\n          <Route path=\"/blog/post/:id\" component={DetailPost} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    posts:[]\r\n}\r\n\r\nconst postReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"CREATE_POST\":            \r\n            console.log('Post Created')\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case \"SET_POST\":\r\n            console.log('Post Loaded')\r\n            return {\r\n                ...state,\r\n                posts:action.posts\r\n            }\r\n\r\n        case \"EDIT_POST\":\r\n            console.log('Post Edited : ',action.id)\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case \"DELETE_POST\":\r\n            console.log('Post Deleted : ',action.id)\r\n            let deletePosts = state.posts.filter((post) => {\r\n                return post.id != action.id\r\n            })\r\n            return {\r\n                ...state,\r\n                posts:deletePosts\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer;","const initState = {\r\n    authError:false,\r\n    user:null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log(\"Logged In : \")\r\n            // sessionStorage.setItem(\"user_token\",action.user.token)\r\n            return {\r\n                ...state,\r\n                authError:false,\r\n            }\r\n        case \"LOGIN_FAILED\":\r\n            console.log(\"Login Failed \",action.err)\r\n            return {\r\n                ...state,\r\n                authError: \"Login Failed\" \r\n            }\r\n        case \"LOGOUT_SUCCESS\":\r\n            console.log(\"Logout Success\")\r\n            // sessionStorage.removeItem(\"user_token\")\r\n            return {\r\n                ...state,\r\n            }\r\n        case \"CHECK_AUTH\" :\r\n            return {\r\n                ...state,\r\n                user:action.token\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","import postReducer from './postReducer';\r\nimport authReducer from './authReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    post:postReducer,\r\n    auth:authReducer,\r\n    firebase:firebaseReducer,\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer';\nimport { compose } from 'redux'\nimport { reactReduxFirebase } from 'react-redux-firebase'\nimport firebase from 'firebase'\n\n// react-redux-firebase options\nconst config = {\n    userProfile: 'users', // firebase root where user profiles are stored\n    enableLogging: false, // enable/disable Firebase's database logging\n}\n\n// Add redux Firebase to compose\nconst createStoreWithFirebase = compose(\n    reactReduxFirebase(firebase, config)\n)(createStore)\n\n// Create store with reducers and initial state\nconst store = createStoreWithFirebase(rootReducer,\n    applyMiddleware(thunk)    \n)\n\n// const store = createStore(rootReducer,\n//     applyMiddleware(thunk)\n// )\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}